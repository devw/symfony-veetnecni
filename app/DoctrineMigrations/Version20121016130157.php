<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;
use Doctrine\DBAL\Types\Type;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20121016130157 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        $this->addSql("ALTER TABLE contest ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL, ADD published_at DATETIME DEFAULT NULL");
        $this->addSql("ALTER TABLE data_entry ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL");
        $this->addSql("ALTER TABLE organization ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL");
        $this->addSql("ALTER TABLE participation ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL, ADD accepted_at DATETIME DEFAULT NULL");
        $this->addSql("ALTER TABLE periodicity ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL");
        $this->addSql("ALTER TABLE prize ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL");
        $this->addSql("ALTER TABLE users ADD created_at DATETIME NOT NULL, ADD updated_at DATETIME NOT NULL");

        $now = $this->convertValue('datetime', new \DateTime());

        $this->addSql("UPDATE contest SET created_at = ?, updated_at = ?", array($now, $now));
        $this->addSql("UPDATE contest SET published_at = ? WHERE published = ?", array($now, $this->convertValue('boolean', true)));
        $this->addSql("UPDATE data_entry SET created_at = ?, updated_at = ?", array($now, $now));
        $this->addSql("UPDATE organization SET created_at = ?, updated_at = ?", array($now, $now));
        $this->addSql("UPDATE participation SET created_at = ?, updated_at = ?", array($now, $now));
        $this->addSql("UPDATE participation SET accepted_at = ? WHERE accepted = ?", array($now, $this->convertValue('boolean', true)));
        $this->addSql("UPDATE periodicity SET created_at = ?, updated_at = ?", array($now, $now));
        $this->addSql("UPDATE prize SET created_at = ?, updated_at = ?", array($now, $now));
        $this->addSql("UPDATE users SET created_at = ?, updated_at = ?", array($now, $now));
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        $this->addSql("ALTER TABLE contest DROP created_at, DROP updated_at, DROP published_at");
        $this->addSql("ALTER TABLE data_entry DROP created_at, DROP updated_at");
        $this->addSql("ALTER TABLE organization DROP created_at, DROP updated_at");
        $this->addSql("ALTER TABLE participation DROP created_at, DROP updated_at, DROP accepted_at");
        $this->addSql("ALTER TABLE periodicity DROP created_at, DROP updated_at");
        $this->addSql("ALTER TABLE prize DROP created_at, DROP updated_at");
        $this->addSql("ALTER TABLE users DROP created_at, DROP updated_at");
    }

    private function convertValue($type, $value)
    {
        return Type::getType($type)->convertToDatabaseValue($value, $this->connection->getDatabasePlatform());
    }
}
